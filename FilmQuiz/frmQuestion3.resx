<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        k3L/ADovb6U4Shm9Y3B7jFdRV+Gpqif/2Q==
</value>
  </data>
</root>